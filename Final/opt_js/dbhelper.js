let alt_array={1:"Inside Mission Chinese Food",2:"Emily Restaurent Pizza",3:"Kang Ho Dong Baekjeong Interior with no peoples",4:"Outside view of Katz's Delicatessen",5:"Roberta's Pizza Inside view with customers",6:"Hometown BBQ Inside view",7:"Superiority Burger Main Entrance",8:"outside view of The Dutch",9:"People inside Mu Ramen",10:"Inside view of Casa Enrique"},web_worker=new Worker("opt_js/worker.js"),db_name="RR_indexeddb",db_objectstore_name="RestaurantsInfo";class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchReviewsById(e){return fetch(e).then(e=>e.json())}static fetchRestaurants(e){fetch(DBHelper.DATABASE_URL).then(e=>e.json()).then(t=>{web_worker.postMessage([t,"AddingRestaurants"]),e(null,t)}).catch(t=>{if(console.log("No network,trying to fetch from indexedDb"),console.log(t),window.indexedDB){let t=window.indexedDB.open(db_name,"1");t.onerror=(e=>{console.log("Inside catch block",e)}),t.onsuccess=function(t){let n=t.target.result.transaction([db_objectstore_name],"readonly").objectStore(db_objectstore_name).getAll();console.log(n),n.onsuccess=(()=>{e(null,n.result)})},console.log("Browser supports indexeddb feature")}else console.log("Browser doesnt support indexeddb feature")})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((n,s)=>{if(n)t(n,null);else{const n=s.find(t=>t.id==e);n?t(null,n):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,s)=>{if(n)t(n,null);else{const n=s.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,s)=>{if(n)t(n,null);else{const n=s.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((s,o)=>{if(s)n(s,null);else{let s=o;"all"!=e&&(s=s.filter(t=>t.cuisine_type==e)),"all"!=t&&(s=s.filter(e=>e.neighborhood==t)),n(null,s)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),s=t.filter((e,n)=>t.indexOf(e)==n);e(null,s)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),s=t.filter((e,n)=>t.indexOf(e)==n);e(null,s)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return null==e.photograph?"opt_webp/noimage.webp":`opt_webp/${e.photograph}.webp`}static mapMarkerForRestaurant(e,t){const n=new L.marker([e.latlng.lat,e.latlng.lng],{title:e.name,alt:e.name,url:DBHelper.urlForRestaurant(e)});return n.addTo(newMap),n}}