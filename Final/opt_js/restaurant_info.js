let restaurant;var newMap;let addReview=document.getElementById("AddReview"),ratingValue=document.getElementById("ratingValue"),reviewerName=document.getElementById("reviewer_name"),reviewTextArea=document.getElementById("commentArea"),is_favorite=!1,add_favorite=document.getElementById("add_favorite");function addReviewFunction(){let e=reviewerName.value,t=ratingValue.value,a=reviewTextArea.value;if(""==e)return alert("Please enter the name");if("placeholder_for_rating"==t)return alert("Please select a rating");if(""==a)return alert("Please write a comment");{const r=getParameterByName("id"),n=new Headers({"Content-Type":"application/json"});fetch("http://localhost:1337/reviews/",{method:"POST",cache:"no-cache",headers:n,body:JSON.stringify({restaurant_id:r,name:e,rating:t,comments:a,createdAt:new Date})}).then(e=>e.json()).then(e=>{if(e){document.getElementById("reviews-list").appendChild(createReviewHTML(e)),resetFields(),alert("Submitted Your Review")}}).catch(e=>{alert("Network Failure,but dont worry we will add your review"),resetFields(),console.error(e)})}}function resetFields(){reviewerName.value="",reviewTextArea.value="",ratingValue.value="placeholder_for_rating"}function createReviewHTML(e){const t=document.createElement("li"),a=document.createElement("p");a.classList.add("name"),a.innerHTML=e.name,t.appendChild(a);const r=document.createElement("p");r.innerHTML=new Date(e.createdAt).toDateString(),r.classList.add("date"),t.appendChild(r);const n=document.createElement("p");n.innerHTML=`Rating: ${e.rating}`,n.classList.add("rating"),t.appendChild(n);const o=document.createElement("p");return o.innerHTML=e.comments,o.classList.add("comments"),t.appendChild(o),t}function bookmarkButton(){is_favorite?(is_favorite=!1,add_favorite.classList.remove("loved_it"),add_favorite.innerHTML="<span>♡</span> You like it?",favoritePutRequest(is_favorite)):(is_favorite=!0,add_favorite.classList.add("loved_it"),add_favorite.innerHTML="<span style='color:red'>♥</span> You loved it",favoritePutRequest(is_favorite)),console.log(is_favorite)}function favoritePutRequest(e){return console.log(is_favorite),fetch(`http://localhost:1337/restaurants/${getParameterByName("id")}`,{method:"POST",body:JSON.stringify({is_favorite:e})}).then(e=>e.json()).then(e=>{console.log(e)}).catch(e=>{alert("Failed to save, Please check your internet connection",e)})}document.addEventListener("DOMContentLoaded",e=>{initMap()}),initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.newMap=L.map("map",{center:[t.latlng.lat,t.latlng.lng],zoom:16,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1IjoieWFzaHdhbnRoa29ybGEiLCJhIjoiY2prNTh4aDh1MTZiMjNycXFiMWZxOGtuaSJ9.lnpebJNiR4wmBk7ND3gz5A",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.newMap))})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(t,a)=>{self.restaurant=a,a?(fillRestaurantHTML(),e(null,a)):console.error(t)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{console.log("Inside Fill RestaurantHTML"),document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-img");t.className="restaurant-img",t.src=DBHelper.imageUrlForRestaurant(e),console.log(alt_array[e.id]),t.setAttribute("alt",alt_array[e.id]),t.title=e.name,document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,is_favorite=e.is_favorite,console.log(is_favorite,"knowing the valie of is_favorite variable"),is_favorite?(console.log("is true"),add_favorite.classList.add("loved_it"),add_favorite.innerHTML="<span style='color:red'>♥</span> You loved it"):(add_favorite.classList.remove("loved_it"),add_favorite.innerHTML="<span>♡</span> You like it?"),e.operating_hours&&fillRestaurantHoursHTML();const a=getParameterByName("id");DBHelper.fetchReviewsById(`http://localhost:1337/reviews?restaurant_id=${a}`).then(e=>{fillReviewsHTML(e),web_worker.postMessage([e,"saveReviews"])}).catch(e=>{if(console.log(e),window.indexedDB){let e=window.indexedDB.open("review_db","2");e.onerror=(e=>{console.log("Inside catch block",e)}),e.onsuccess=function(e){e.target.result.transaction("reviewStore","readonly").objectStore("reviewStore").index("restaurant_id").getAll(parseInt(getParameterByName("id"))).onsuccess=(e=>{fillReviewsHTML(e.target.result)})},console.log("Browser supports indexeddb feature")}else console.log("Browser doesnt support indexeddb feature")})}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let a in e){const r=document.createElement("tr"),n=document.createElement("td");n.innerHTML=a,r.appendChild(n);const o=document.createElement("td");o.innerHTML=e[a],r.appendChild(o),t.appendChild(r)}}),fillReviewsHTML=(e=>{const t=document.getElementById("reviews-container"),a=document.createElement("h2");if(a.innerHTML="Reviews",t.appendChild(a),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const r=document.getElementById("reviews-list");e.forEach(e=>{r.appendChild(createReviewHTML(e))}),t.appendChild(r)}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),a=document.createElement("li");a.innerHTML=e.name,t.appendChild(a)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const a=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return a?a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):"":null});